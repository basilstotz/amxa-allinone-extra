#!/bin/sh
# postinst script for amxa-bootserver-extra
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)

      #patch puavo-bootserver-sync-images
      sed -i /usr/sbin/puavo-bootserver-sync-images -e's/VERIFY_PEER/VERIFY_NONE/g'

      #patch puavo-install-and-update-ltspimages
      sed -i /usr/sbin/puavo-install-and-update-ltspimages -e's@--ca-certificate=/etc/puavo-conf/rootca.pem@--no-check-certificate@g'
	
      #use 144G ,and not 128G, for /images on bootservers: puavo-setup-filesystem
      sed -i /usr/sbin/puavo-setup-filesystems -e 's/128G/144G/'
      #use 80 GByte for /images on laptops
      sed -i /usr/sbin/puavo-setup-filesystems -e 's/40G/80G/'

      #save original names
      DD="/etc/puavo-image"
      if test -d $DD; then
	  if test -e $DD/name; then
	      cp $DD/name $DD/base_name
	  fi
	  if test -e $DD/class; then
	      cp $DD/class $DD/base_class
	  fi
	  if test -e $DD/release; then
	      cp $DD/release $DD/base_release
	  fi
      fi
      
      
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
